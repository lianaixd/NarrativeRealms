#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.16.0.3)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["_010_table_tex_v01", "dude_normal_tex_v01", "storypath_tex_v01", "lightbulb_tex_v01", "microphone_tex_v01", "signpost_forest_tex_v01", "signpost_desert_tex_v01", "treasure_tex_v01", "cottage_teapot_tex_v01", "signopost_snow_tex_v01", "dragon_anim_v03", "TestAnimation", "Dragon", "Tag", "Armour", "DirectionalLight", "DragonInvisible", "Indicator8", "Indicator14", "Indicator17", "Indicator21", "Indicator24", "BulbTapped", "ObjectAppear", "MicrophoneInteractive"]
    def "_010_table_tex_v01" (
        customData = {
            float3 rotationEulerHint = (-1.5707964, 1.5707963, 0)
        }
        references = @010_table_tex_v01.usdz@
    )
    {
        quatf xformOp:orient = (0.5, -0.5, 0.5, 0.5)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (2.3492135e-9, 0.885286, -1.3045777)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "dude_normal_tex_v01" (
        active = false
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        prepend references = @dude-normal_tex_v01.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (1.624922, 1.4065162, -1.383944)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.16833252, 0.2302674, 0.12704986)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (3.7252903e-9, 0.018941287, 0.012453463)
                }
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }
    }

    def "storypath_tex_v01" (
        active = true
        customData = {
            float3 rotationEulerHint = (-1.5707965, -0.52359873, -6.8825514e-8)
        }
        references = @storypath_tex_v01.usdz@
    )
    {
        quatf xformOp:orient = (0.6830126, -0.6830128, -0.18301263, -0.18301274)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-2.1187589e-8, 0.83733517, -1.3045777)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "lightbulb_tex_v01" (
        active = true
        references = @lightbulb_tex_v01.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.59879977, 1.3527161, -1.8218651)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </Root/lightbulb_tex_v01/OnAddedToScene>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnAddedToScene"
        {
            rel actions = </Root/lightbulb_tex_v01/OnAddedToScene/Action>
            uniform bool exclusive
            rel triggers = </Root/lightbulb_tex_v01/OnAddedToScene/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/lightbulb_tex_v01>
                token info:id = "SceneTransition"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/BulbTapped>
                rel animationLibraryKeyOverrideKey = </Root/lightbulb_tex_v01/OnAddedToScene/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }

        over "Materials"
        {
            over "Lightbulb_MTL"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex

                over "PreviewSurface"
                {
                    delete float inputs:opacity.connect = </Root/lightbulb_tex_v01/Materials/Lightbulb_MTL/baseColorTextureShader.outputs:a>
                }
            }
        }
    }

    def "signpost_forest_tex_v01" (
        active = true
        references = @signpost-forest_tex_v01.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.14536753, 0.9100292, -1.6192367)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "signpost_desert_tex_v01" (
        active = true
        references = @signpost-desert_tex_v01.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-0.25426307, 0.9098594, -1.0436317)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "treasure_tex_v01" (
        customData = {
            float3 rotationEulerHint = (0.006982207, 0.0069822036, 0.006982207)
        }
        references = @treasure_tex_v01.usdz@
    )
    {
        quatf xformOp:orient = (0.99998176, 0.0034788663, 0.0035032397, 0.0034788663)
        float3 xformOp:scale = (0.39555463, 0.39555466, 0.39555463)
        float3 xformOp:translate = (-0.10184945, 0.90546465, -1.2058274)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "cottage_teapot_tex_v01" (
        references = @cottage-teapot_tex_v01.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.6, 0.6, 0.6)
        float3 xformOp:translate = (0.31137964, 0.90503395, -1.3672968)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "signopost_snow_tex_v01" (
        active = true
        references = @signopost-snow_tex_v01.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.054959565, 0.9095472, -0.946887)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "dragon_anim_v03" (
        prepend apiSchemas = ["MaterialBindingAPI"]
        references = @dragon_anim_v03.usdz@
    )
    {
        rel material:binding = </Root/dragon_anim_v03/mtl/pasted__dragon_tex_v01_Dragon_MTL> (
            bindMaterialAs = "weakerThanDescendants"
        )
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.0059894025, 0.0059894025, 0.0059894025)
        float3 xformOp:translate = (-0.23775662, 0.91373, -1.2181262)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "AnimationLibrary"
        {
            token info:id = "RealityKit.AnimationLibrary"

            def RealityKitAnimationFile "default_subtree_animation"
            {
                uniform bool looping = 1
                uniform string name = "default subtree animation"
            }

            def RealityKitClipDefinition "Clip_default_subtree_animation"
            {
                uniform string[] clipNames = ["Appear", "Breathe", "disappear"]
                uniform string sourceAnimationName = "default subtree animation"
                uniform double[] startTimes = [0, 1.5631596648858652, 4.099166666666667]
            }
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </Root/dragon_anim_v03/OnAddedToScene>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnAddedToScene"
        {
            rel actions = </Root/dragon_anim_v03/OnAddedToScene/Action>
            uniform bool exclusive
            rel triggers = </Root/dragon_anim_v03/OnAddedToScene/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/dragon_anim_v03>
                token info:id = "SceneTransition"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/Dragon>
                rel animationLibraryKeyOverrideKey = </Root/dragon_anim_v03/OnAddedToScene/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 0
        }
    }

    def "TestAnimation" (
        active = true
        references = @TestAnimation.usda@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0.32741648, 1.2887162, -1.8296247)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "AnimationLibrary"
        {
            uniform token info:id = "RealityKit.AnimationLibrary"

            def RealityKitClipDefinition "Clip_default_subtree_animation"
            {
                uniform string[] clipNames = ["Appear", "Idle", "IdleToRight", "rightToIdle", "IdleToLeft", "LeftToIdle", "DefaultToArmour", "ArmourIdle", "ArmourToRight", "RightToArmour", "ArmourToLeft", "LeftToArmour", "ArmourDisappear"]
                uniform string sourceAnimationName = "default subtree animation"
                uniform double[] startTimes = [0, 1.2177512764750378, 2.688025954992436, 3.724204009433962, 4.487815120545073, 5.269592898322851, 5.864259564989518, 7.098310571473553, 8.62200389641058, 9.557648453878407, 10.285648453878407, 11.245648453878406, 11.837981787211739]
            }

            def RealityKitAnimationFile "Appear"
            {
                uniform bool looping = 1
                uniform string name = "Appear"
            }
        }

        over "dude_org_anim_v02"
        {
            over "AnimationLibrary"
            {
                over "default_subtree_animation"
                {
                    uniform bool looping = 1
                    uniform string name = "default subtree animation"
                }
            }

            over "OnTap"
            {
                over "Action"
                {
                    rel affectedObjects = None
                    rel animationLibraryKey = None
                }
            }
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </Root/TestAnimation/OnAddedToScene>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnAddedToScene"
        {
            rel actions = </Root/TestAnimation/OnAddedToScene/Action>
            uniform bool exclusive
            rel triggers = </Root/TestAnimation/OnAddedToScene/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/TestAnimation>
                token info:id = "SceneTransition"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/Tag>
                rel animationLibraryKeyOverrideKey = </Root/TestAnimation/OnAddedToScene/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.20761001, 0.23026738, 0.14521337)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0.002656117, 0.105968386, 0.0033717044)
                }
            }
        }
    }

    def RealityKitTimeline "Dragon"
    {
        reorder nameChildren = ["Track", "Track2"]
        def RealityKitTrack "Track"
        {
            reorder nameChildren = ["Animation", "DragonAppear", "Show"]
            def RealityKitAction "Animation"
            {
                string actionKind = "animation"
                string animation = "Breathe"
                int blendLayer = 500
                double duration = 2.536007001780802
                uniform token info:id = "C58348A6-4193-418C-AF6E-48AFEBFC1152"
                double loopCount = 0
                bool separateAnimatedValue = 1
                double startTime = 1.7628749028382085
                rel target = </Root/dragon_anim_v03>

                def RealityKitStruct "handoffType"
                {
                }
            }

            def RealityKitAction "Show"
            {
                string actionKind = "show"
                int blendLayer = 300
                double duration = 0.19602584513693413
                uniform token info:id = "636458CC-A637-4283-98A0-8D72450A11DF"
                double startTime = 0
                rel target = </Root/dragon_anim_v03>

                def RealityKitStruct "timingFunction"
                {
                }
            }

            def RealityKitAction "DragonAppear"
            {
                string actionKind = "animation"
                string animation = "Appear"
                int blendLayer = 500
                double duration = 1.5631596648858652
                uniform token info:id = "E07E0D35-C706-4A7B-979A-1F187CE81BA5"
                bool separateAnimatedValue = 1
                double startTime = 0.19971523785234388
                rel target = </Root/dragon_anim_v03>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def RealityKitTimeline "Tag"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Animation"
            {
                string actionKind = "animation"
                string animation = "Idle"
                int blendLayer = 500
                double duration = 1.4702746785173981
                uniform token info:id = "0A5E467B-4DF8-42CC-8679-6AF54D065EE2"
                double loopCount = 0
                bool separateAnimatedValue = 1
                double startTime = 1.2177512765750376
                rel target = </Root/TestAnimation>

                def RealityKitStruct "handoffType"
                {
                }
            }

            def RealityKitAction "Animation2"
            {
                string actionKind = "animation"
                string animation = "Appear"
                int blendLayer = 500
                double duration = 1.2177512764750378
                uniform token info:id = "519BBB4E-1EFF-4E89-9037-7B078058C756"
                bool separateAnimatedValue = 1
                double startTime = 0
                rel target = </Root/TestAnimation>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def RealityKitTimeline "Armour"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Animation"
            {
                string actionKind = "animation"
                string animation = "DefaultToArmour"
                int blendLayer = 500
                double duration = 1.2340510064840347
                uniform token info:id = "279AC070-EE07-4D6A-A3E3-D6997922946C"
                bool separateAnimatedValue = 1
                double startTime = 0
                rel target = </Root/TestAnimation>

                def RealityKitStruct "handoffType"
                {
                }
            }

            def RealityKitAction "Animation2"
            {
                string actionKind = "animation"
                string animation = "ArmourIdle"
                int blendLayer = 500
                double duration = 1.5236933249370281
                uniform token info:id = "E6E22940-91B6-4C4F-93E3-970AC197A085"
                double loopCount = 0
                bool separateAnimatedValue = 1
                double startTime = 1.153666666766667
                rel target = </Root/TestAnimation>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def Xform "DirectionalLight"
    {
        float3 xformOp:translate = (1.6128147, 1.5482703, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "DirectionalLight"
        {
            token info:id = "RealityKit.DirectionalLight"
            float intensity = 1145.708

            def RealityKitStruct "Shadow"
            {
            }
        }
    }

    def RealityKitTimeline "DragonInvisible"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Hide"
            {
                string actionKind = "hide"
                int blendLayer = 300
                double duration = 1
                uniform token info:id = "7AB8EDAB-DB0A-4BD1-9592-1CD90FC9774E"
                double startTime = 0
                rel target = </Root/dragon_anim_v03>

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }
    }

    def Xform "Indicator8"
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.25217763, 0.25217763, 0.25217763)
        float3 xformOp:translate = (-0.3445847, 1.1433878, -1.504911)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "VFXEmitter"
        {
            token info:id = "RealityKit.VFXEmitter"

            def RealityKitStruct "currentState"
            {
                token birthDirection = "Normal"
                token birthLocation = "Surface"
                int64 burstCount = 1000
                float3 emissionDirection = (0, 1, 0)
                double emissionDuration = 10
                double emissionDurationVariation = 0
                token emitterShape = "Cylinder"
                double idleDuration = 0
                double idleDurationVariation = 0
                bool isLocal = 1
                bool isSpawningEnabled = 0
                bool loops = 1
                float particleSpeed = 2
                float particleSpeedVariation = 0.1
                float3 shapeSize = (0.015, 0.01, 0.015)
                bool spawnInheritParentColor = 0
                token spawnOccasion = "OnBirth"
                float spawnSpreadFactor = 0
                float spawnSpreadFactorVariation = 0
                float spawnVelocityFactor = 100
                double warmupDuration = 0

                def RealityKitStruct "mainEmitter"
                {
                    float3 acceleration = (0, -0.05, 0)
                    token animationRepeatMode = "PlayOnce"
                    token billboardMode = "Billboard"
                    float birthRate = 1000
                    float birthRateVariation = 0
                    token blendMode = "Alpha"
                    float colorEvolutionPower = 1
                    int64 columnCount = 4
                    float dampingFactor = 8
                    float4 endColorA = (0.0013309671, 0.03458923, 1, 1)
                    float4 endColorB = (0.11386989, 0.0064959256, 0.10626237, 1)
                    float frameRate = 0
                    float frameRateVariation = 0
                    int64 initialFrame = 2
                    int64 initialFrameVariation = 6
                    bool isAnimated = 1
                    bool isLightingEnabled = 0
                    float noiseAnimationSpeed = 0
                    float noiseScale = 1
                    float noiseStrength = 0.1
                    token opacityOverLife = "LinearFadeOut"
                    float particleAngle = 0
                    float particleAngleVariation = 0
                    float particleAngularVelocity = 0
                    float particleAngularVelocityVariation = 1
                    asset particleImage = @ParticleEmitterPresetTextures/dustsheet.exr@
                    double particleLifeSpan = 2
                    double particleLifeSpanVariation = 1
                    float particleMass = 1
                    float particleMassVariation = 0.8
                    float particleSize = 0.01
                    float particleSizeVariation = 0
                    float3 radialGravityCenter = (0, -0.1, 0)
                    float radialGravityStrength = -0.1
                    int64 rowCount = 4
                    float sizeMultiplierAtEndOfLifespan = 8
                    float sizeMultiplierAtEndOfLifespanPower = 0.2
                    token sortOrder = "DecreasingDepth"
                    float spreadingAngle = 0
                    float4 startColorA = (1, 1, 1, 0.26)
                    float4 startColorB = (0.26994613, 0.9536557, 0, 1)
                    float stretchFactor = 0
                    bool useEndColor = 0
                    bool useEndColorRange = 0
                    bool useStartColorRange = 1
                    float3 vortexDirection = (0, 1, 0)
                    float vortexStrength = 0
                }

                def RealityKitStruct "spawnedEmitter"
                {
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0, 0, 0)
                float radius = 0.07
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            uniform token info:id = "RCP.BehaviorsContainer"
        }
    }

    def Xform "Indicator14"
    {
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.25217763, 0.25217763, 0.25217763)
        float3 xformOp:translate = (-0.0038692579, 0.97263956, -1.2980523)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "VFXEmitter"
        {
            token info:id = "RealityKit.VFXEmitter"

            def RealityKitStruct "currentState"
            {
                token birthDirection = "Normal"
                token birthLocation = "Surface"
                int64 burstCount = 1000
                float3 emissionDirection = (0, 1, 0)
                double emissionDuration = 10
                double emissionDurationVariation = 0
                token emitterShape = "Cylinder"
                double idleDuration = 0
                double idleDurationVariation = 0
                bool isLocal = 1
                bool isSpawningEnabled = 0
                bool loops = 1
                float particleSpeed = 2
                float particleSpeedVariation = 0.1
                float3 shapeSize = (0.015, 0.01, 0.015)
                bool spawnInheritParentColor = 0
                token spawnOccasion = "OnBirth"
                float spawnSpreadFactor = 0
                float spawnSpreadFactorVariation = 0
                float spawnVelocityFactor = 100
                double warmupDuration = 0

                def RealityKitStruct "mainEmitter"
                {
                    float3 acceleration = (0, -0.05, 0)
                    token animationRepeatMode = "PlayOnce"
                    token billboardMode = "Billboard"
                    float birthRate = 1000
                    float birthRateVariation = 0
                    token blendMode = "Alpha"
                    float colorEvolutionPower = 1
                    int64 columnCount = 4
                    float dampingFactor = 8
                    float4 endColorA = (0.0013309671, 0.03458923, 1, 1)
                    float4 endColorB = (0.11386989, 0.0064959256, 0.10626237, 1)
                    float frameRate = 0
                    float frameRateVariation = 0
                    int64 initialFrame = 2
                    int64 initialFrameVariation = 6
                    bool isAnimated = 1
                    bool isLightingEnabled = 0
                    float noiseAnimationSpeed = 0
                    float noiseScale = 1
                    float noiseStrength = 0.1
                    token opacityOverLife = "LinearFadeOut"
                    float particleAngle = 0
                    float particleAngleVariation = 0
                    float particleAngularVelocity = 0
                    float particleAngularVelocityVariation = 1
                    asset particleImage = @ParticleEmitterPresetTextures/dustsheet.exr@
                    double particleLifeSpan = 2
                    double particleLifeSpanVariation = 1
                    float particleMass = 1
                    float particleMassVariation = 0.8
                    float particleSize = 0.01
                    float particleSizeVariation = 0
                    float3 radialGravityCenter = (0, -0.1, 0)
                    float radialGravityStrength = -0.1
                    int64 rowCount = 4
                    float sizeMultiplierAtEndOfLifespan = 8
                    float sizeMultiplierAtEndOfLifespanPower = 0.2
                    token sortOrder = "DecreasingDepth"
                    float spreadingAngle = 0
                    float4 startColorA = (1, 1, 1, 0.26)
                    float4 startColorB = (0.26994613, 0.9536557, 0, 1)
                    float stretchFactor = 0
                    bool useEndColor = 0
                    bool useEndColorRange = 0
                    bool useStartColorRange = 1
                    float3 vortexDirection = (0, 1, 0)
                    float vortexStrength = 0
                }

                def RealityKitStruct "spawnedEmitter"
                {
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0, 0, 0)
                float radius = 0.07
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            uniform token info:id = "RCP.BehaviorsContainer"
        }
    }

    def Xform "Indicator17"
    {
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.25217763, 0.25217763, 0.25217763)
        float3 xformOp:translate = (0.32912624, 1.270022, -1.1017945)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "VFXEmitter"
        {
            token info:id = "RealityKit.VFXEmitter"

            def RealityKitStruct "currentState"
            {
                token birthDirection = "Normal"
                token birthLocation = "Surface"
                int64 burstCount = 1000
                float3 emissionDirection = (0, 1, 0)
                double emissionDuration = 10
                double emissionDurationVariation = 0
                token emitterShape = "Cylinder"
                double idleDuration = 0
                double idleDurationVariation = 0
                bool isLocal = 1
                bool isSpawningEnabled = 0
                bool loops = 1
                float particleSpeed = 2
                float particleSpeedVariation = 0.1
                float3 shapeSize = (0.015, 0.01, 0.015)
                bool spawnInheritParentColor = 0
                token spawnOccasion = "OnBirth"
                float spawnSpreadFactor = 0
                float spawnSpreadFactorVariation = 0
                float spawnVelocityFactor = 100
                double warmupDuration = 0

                def RealityKitStruct "mainEmitter"
                {
                    float3 acceleration = (0, -0.05, 0)
                    token animationRepeatMode = "PlayOnce"
                    token billboardMode = "Billboard"
                    float birthRate = 1000
                    float birthRateVariation = 0
                    token blendMode = "Alpha"
                    float colorEvolutionPower = 1
                    int64 columnCount = 4
                    float dampingFactor = 8
                    float4 endColorA = (0.0013309671, 0.03458923, 1, 1)
                    float4 endColorB = (0.11386989, 0.0064959256, 0.10626237, 1)
                    float frameRate = 0
                    float frameRateVariation = 0
                    int64 initialFrame = 2
                    int64 initialFrameVariation = 6
                    bool isAnimated = 1
                    bool isLightingEnabled = 0
                    float noiseAnimationSpeed = 0
                    float noiseScale = 1
                    float noiseStrength = 0.1
                    token opacityOverLife = "LinearFadeOut"
                    float particleAngle = 0
                    float particleAngleVariation = 0
                    float particleAngularVelocity = 0
                    float particleAngularVelocityVariation = 1
                    asset particleImage = @ParticleEmitterPresetTextures/dustsheet.exr@
                    double particleLifeSpan = 2
                    double particleLifeSpanVariation = 1
                    float particleMass = 1
                    float particleMassVariation = 0.8
                    float particleSize = 0.01
                    float particleSizeVariation = 0
                    float3 radialGravityCenter = (0, -0.1, 0)
                    float radialGravityStrength = -0.1
                    int64 rowCount = 4
                    float sizeMultiplierAtEndOfLifespan = 8
                    float sizeMultiplierAtEndOfLifespanPower = 0.2
                    token sortOrder = "DecreasingDepth"
                    float spreadingAngle = 0
                    float4 startColorA = (1, 1, 1, 0.26)
                    float4 startColorB = (0.26994613, 0.9536557, 0, 1)
                    float stretchFactor = 0
                    bool useEndColor = 0
                    bool useEndColorRange = 0
                    bool useStartColorRange = 1
                    float3 vortexDirection = (0, 1, 0)
                    float vortexStrength = 0
                }

                def RealityKitStruct "spawnedEmitter"
                {
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0, 0, 0)
                float radius = 0.07
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            uniform token info:id = "RCP.BehaviorsContainer"
        }
    }

    def Xform "Indicator21"
    {
        float2 ui:nodegraph:node:pos = (40, 40)
        int ui:nodegraph:node:stackingOrder = 2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.25217763, 0.25217763, 0.25217763)
        float3 xformOp:translate = (-0.1697112, 1.048811, -1.4015298)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "VFXEmitter"
        {
            token info:id = "RealityKit.VFXEmitter"

            def RealityKitStruct "currentState"
            {
                token birthDirection = "Normal"
                token birthLocation = "Surface"
                int64 burstCount = 1000
                float3 emissionDirection = (0, 1, 0)
                double emissionDuration = 10
                double emissionDurationVariation = 0
                token emitterShape = "Cylinder"
                double idleDuration = 0
                double idleDurationVariation = 0
                bool isLocal = 1
                bool isSpawningEnabled = 0
                bool loops = 1
                float particleSpeed = 2
                float particleSpeedVariation = 0.1
                float3 shapeSize = (0.015, 0.01, 0.015)
                bool spawnInheritParentColor = 0
                token spawnOccasion = "OnBirth"
                float spawnSpreadFactor = 0
                float spawnSpreadFactorVariation = 0
                float spawnVelocityFactor = 100
                double warmupDuration = 0

                def RealityKitStruct "mainEmitter"
                {
                    float3 acceleration = (0, -0.05, 0)
                    token animationRepeatMode = "PlayOnce"
                    token billboardMode = "Billboard"
                    float birthRate = 1000
                    float birthRateVariation = 0
                    token blendMode = "Alpha"
                    float colorEvolutionPower = 1
                    int64 columnCount = 4
                    float dampingFactor = 8
                    float4 endColorA = (0.0013309671, 0.03458923, 1, 1)
                    float4 endColorB = (0.11386989, 0.0064959256, 0.10626237, 1)
                    float frameRate = 0
                    float frameRateVariation = 0
                    int64 initialFrame = 2
                    int64 initialFrameVariation = 6
                    bool isAnimated = 1
                    bool isLightingEnabled = 0
                    float noiseAnimationSpeed = 0
                    float noiseScale = 1
                    float noiseStrength = 0.1
                    token opacityOverLife = "LinearFadeOut"
                    float particleAngle = 0
                    float particleAngleVariation = 0
                    float particleAngularVelocity = 0
                    float particleAngularVelocityVariation = 1
                    asset particleImage = @ParticleEmitterPresetTextures/dustsheet.exr@
                    double particleLifeSpan = 2
                    double particleLifeSpanVariation = 1
                    float particleMass = 1
                    float particleMassVariation = 0.8
                    float particleSize = 0.01
                    float particleSizeVariation = 0
                    float3 radialGravityCenter = (0, -0.1, 0)
                    float radialGravityStrength = -0.1
                    int64 rowCount = 4
                    float sizeMultiplierAtEndOfLifespan = 8
                    float sizeMultiplierAtEndOfLifespanPower = 0.2
                    token sortOrder = "DecreasingDepth"
                    float spreadingAngle = 0
                    float4 startColorA = (1, 1, 1, 0.26)
                    float4 startColorB = (0.26994613, 0.9536557, 0, 1)
                    float stretchFactor = 0
                    bool useEndColor = 0
                    bool useEndColorRange = 0
                    bool useStartColorRange = 1
                    float3 vortexDirection = (0, 1, 0)
                    float vortexStrength = 0
                }

                def RealityKitStruct "spawnedEmitter"
                {
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0, 0, 0)
                float radius = 0.07
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            uniform token info:id = "RCP.BehaviorsContainer"
        }
    }

    def Xform "Indicator24"
    {
        float2 ui:nodegraph:node:pos = (60, 60)
        int ui:nodegraph:node:stackingOrder = 3
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.25217763, 0.25217763, 0.25217763)
        float3 xformOp:translate = (0.18709359, 1.1246119, -1.1791434)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "VFXEmitter"
        {
            token info:id = "RealityKit.VFXEmitter"

            def RealityKitStruct "currentState"
            {
                token birthDirection = "Normal"
                token birthLocation = "Surface"
                int64 burstCount = 1000
                float3 emissionDirection = (0, 1, 0)
                double emissionDuration = 10
                double emissionDurationVariation = 0
                token emitterShape = "Cylinder"
                double idleDuration = 0
                double idleDurationVariation = 0
                bool isLocal = 1
                bool isSpawningEnabled = 0
                bool loops = 1
                float particleSpeed = 2
                float particleSpeedVariation = 0.1
                float3 shapeSize = (0.015, 0.01, 0.015)
                bool spawnInheritParentColor = 0
                token spawnOccasion = "OnBirth"
                float spawnSpreadFactor = 0
                float spawnSpreadFactorVariation = 0
                float spawnVelocityFactor = 100
                double warmupDuration = 0

                def RealityKitStruct "mainEmitter"
                {
                    float3 acceleration = (0, -0.05, 0)
                    token animationRepeatMode = "PlayOnce"
                    token billboardMode = "Billboard"
                    float birthRate = 1000
                    float birthRateVariation = 0
                    token blendMode = "Alpha"
                    float colorEvolutionPower = 1
                    int64 columnCount = 4
                    float dampingFactor = 8
                    float4 endColorA = (0.0013309671, 0.03458923, 1, 1)
                    float4 endColorB = (0.11386989, 0.0064959256, 0.10626237, 1)
                    float frameRate = 0
                    float frameRateVariation = 0
                    int64 initialFrame = 2
                    int64 initialFrameVariation = 6
                    bool isAnimated = 1
                    bool isLightingEnabled = 0
                    float noiseAnimationSpeed = 0
                    float noiseScale = 1
                    float noiseStrength = 0.1
                    token opacityOverLife = "LinearFadeOut"
                    float particleAngle = 0
                    float particleAngleVariation = 0
                    float particleAngularVelocity = 0
                    float particleAngularVelocityVariation = 1
                    asset particleImage = @ParticleEmitterPresetTextures/dustsheet.exr@
                    double particleLifeSpan = 2
                    double particleLifeSpanVariation = 1
                    float particleMass = 1
                    float particleMassVariation = 0.8
                    float particleSize = 0.01
                    float particleSizeVariation = 0
                    float3 radialGravityCenter = (0, -0.1, 0)
                    float radialGravityStrength = -0.1
                    int64 rowCount = 4
                    float sizeMultiplierAtEndOfLifespan = 8
                    float sizeMultiplierAtEndOfLifespanPower = 0.2
                    token sortOrder = "DecreasingDepth"
                    float spreadingAngle = 0
                    float4 startColorA = (1, 1, 1, 0.26)
                    float4 startColorB = (0.26994613, 0.9536557, 0, 1)
                    float stretchFactor = 0
                    bool useEndColor = 0
                    bool useEndColorRange = 0
                    bool useStartColorRange = 1
                    float3 vortexDirection = (0, 1, 0)
                    float vortexStrength = 0
                }

                def RealityKitStruct "spawnedEmitter"
                {
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0, 0, 0)
                float radius = 0.07
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            uniform token info:id = "RCP.BehaviorsContainer"
        }
    }

    def RealityKitTimeline "BulbTapped"
    {
        reorder nameChildren = ["Track", "Track2"]
        def RealityKitTrack "Track"
        {
            reorder nameChildren = ["Transform_By", "Transform_By2", "Transform_By_1", "Transform_By2_1"]
            def RealityKitAction "Transform_By"
            {
                string actionKind = "moveBy"
                int blendLayer = 300
                double duration = 0.1715298694779116
                uniform token info:id = "8A9C5C34-3FAE-4DF5-94A4-03710BC4C6BE"
                float3 scale = (1.1, 1.1, 1.1)
                double startTime = 0
                rel target = </Root/lightbulb_tex_v01>

                def RealityKitStruct "timingFunction"
                {
                }
            }

            def RealityKitAction "Transform_By2"
            {
                string actionKind = "moveBy"
                int blendLayer = 300
                double duration = 0.1722750377506022
                uniform token info:id = "8A9C5C34-3FAE-4DF5-94A4-03710BC4C6BE"
                float3 scale = (0.9, 0.9, 0.9)
                double startTime = 0.1715298695779115
                rel target = </Root/lightbulb_tex_v01>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }
    }

    def RealityKitTimeline "ObjectAppear"
    {
        def RealityKitTrack "Track"
        {
        }
    }

    def Xform "MicrophoneInteractive" (
        active = true
    )
    {
        def "microphone_tex_v01" (
            active = true
            customData = {
                float3 rotationEulerHint = (-0.33301514, -0.0794983, -0.2256791)
            }
            references = @microphone_tex_v01.usdz@
        )
        {
            quatf xformOp:orient = (0.9783823, -0.16896787, -0.020292317, -0.117499635)
            float3 xformOp:scale = (0.8, 0.8, 0.8)
            float3 xformOp:translate = (0.11879301, 0.8730847, -0.6968537)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "Materials"
            {
                over "Microphone_MTL"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex

                    over "PreviewSurface"
                    {
                        delete float inputs:opacity.connect = </Root/microphone_tex_v01/Materials/Microphone_MTL/baseColorTextureShader.outputs:a>
                    }
                }
            }
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.10467929, 0.1917795, 0.12027502)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0.1339018, 0.90563637, -0.7145307)
                }
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }
    }
}

